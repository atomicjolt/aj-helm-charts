# Default values for aa-datatable-engine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secretName: "aa-datatable-engine"

ajAppMonitoring:
  enabled: false
  # environment: dev
  # name: atomic-app
  # slackmoji: rocket

extraArgs:
  - -i
  - 4

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

networkPolicy:
  enabled: false
  ingressRules: []
  egressRules: []

redis:
  #image.registry: public.ecr.aws/docker/library
  
  # Additional configuration (e.g. password)
  extraSecretRedisConfigs: redis-config

  useDeploymentWhenNonHA: true

  metrics:
    enabled: true

  serviceMonitor:
    enabled: true

  resources:
    requests:
      memory: 100Mi
    limits:
      memory: 200Mi

  redisConfig: |-
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    save ""

externalSecrets:
  config:
    enabled: false
    data: []
    # data:
    # - secretKey: REDIS_URL
    #   remoteRef:
    #     key: /path/REDIS_URL
    # - secretKey: LEARNOSITY_SECRET
    #   remoteRef:
    #     key: /path/LEARNOSITY_SECRET
    secretStoreRef: {}
    # secretStoreRef:
    #   name: aws-ssm
    #   kind: ClusterSecretStore
    refreshInterval: 2m
    dataFrom: []
    target: 
      creationPolicy: Orphan
      deletionPolicy: Retain
  redis:
    enabled: false
    data: []
    # data:
    # - secretKey: redis.conf
    #   remoteRef:
    #     key: /path/redis.conf
    secretStoreRef: {}
    # secretStoreRef:
    #   name: aws-ssm
    #   kind: ClusterSecretStore
    refreshInterval: 2m
    dataFrom: []
    target: 
      creationPolicy: Orphan
      deletionPolicy: Retain
