# Default values for canvas.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: canvas
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: latest
  # preDeployTag: latest
  # If set, the preDeployTag is used in pre-deploy migrations, otherwise
  # pre-deploy migrations use the same tag as everything else.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "canvas"

configSecret: "canvas-secrets"
externalSecret:
  enabled: false
  spec: 
    backendType: systemManager
    data: []

app:
  replicaCount: 1
  terminationGracePeriodSeconds: 75
  lifecycle: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi


worker:
  replicaCount: 1
  extraArgs: []
  terminationGracePeriodSeconds: 30
  lifecycle: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  # ingressClassName: default
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  # storageClassName: default
  size: 10Gi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection
  # selectorLabels: {}

metrics:
  prometheusExporter:
    enabled: false
    repository: prom/statsd-exporter
    tag: v0.22.4
    pullPolicy: IfNotPresent
    resources: {}
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    scrapeInterval: 30s

canvas-rce-api:
  enabled: true
  image:
    #tag: latest
  fullnameOverride: "canvas-rce-api"
  service:
    type: ClusterIP
    port: 80

  externalSecret:
    enabled: false
    spec: 
      backendType: systemManager
      data: []

  replicaCount: 1
  metrics:
    prometheusExporter:
      enabled: true
    serviceMonitor:
      enabled: true

redis:
  enabled: true
  architecture: standalone
  auth:
    sentinel: false
    existingSecret: redis
    existingSecretPasswordKey: redis-password
    usePasswordFiles: true
  master:
    disableCommands:
      # TODO
    persistence:
      enabled: false
  replica:
    replicaCount: 0
    disableCommands:
      # TODO
    persistence:
      enabled: false
  metrics:
    enabled: true
